# SPARQL Agent API and MCP Server Configuration

# Main API Server
server {
    listen 80;
    listen [::]:80;
    server_name _;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;

    # Increase buffer sizes for large queries
    client_max_body_size 10M;
    client_body_buffer_size 128k;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Request-ID $request_id;

    # WebSocket support
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";

    # =========================================================================
    # API Endpoints
    # =========================================================================

    # Health check (no rate limiting)
    location /health {
        proxy_pass http://sparql_agent_api;
        access_log off;
    }

    # Metrics (restrict access if needed)
    location /metrics {
        # Uncomment to restrict access
        # allow 10.0.0.0/8;
        # deny all;

        proxy_pass http://sparql_agent_api;
    }

    # API Documentation
    location ~ ^/(docs|redoc|openapi.json) {
        proxy_pass http://sparql_agent_api;
    }

    # Query endpoints (rate limited)
    location ~ ^/api/v1/(query|execute|generate) {
        limit_req zone=query_limit burst=10 nodelay;

        proxy_pass http://sparql_agent_api;
    }

    # Other API endpoints (less strict rate limiting)
    location ~ ^/api/ {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://sparql_agent_api;
    }

    # WebSocket endpoint
    location /ws/ {
        limit_req zone=api_limit burst=5 nodelay;

        proxy_pass http://sparql_agent_api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # All other API routes
    location / {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://sparql_agent_api;
    }

    # Static files (if serving frontend)
    location /static/ {
        alias /usr/share/nginx/html/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }

    # Frontend SPA (if applicable)
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        root /usr/share/nginx/html;
        expires 30d;
        add_header Cache-Control "public, immutable";
    }
}

# MCP Server (optional, if exposing externally)
server {
    listen 3000;
    listen [::]:3000;
    server_name _;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;

    # Timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Proxy headers
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;

    location / {
        limit_req zone=api_limit burst=10 nodelay;

        proxy_pass http://sparql_agent_mcp;
    }
}

# HTTPS Server (uncomment and configure for production)
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     server_name your-domain.com;
#
#     # SSL Configuration
#     ssl_certificate /etc/nginx/certs/fullchain.pem;
#     ssl_certificate_key /etc/nginx/certs/privkey.pem;
#     ssl_session_timeout 1d;
#     ssl_session_cache shared:SSL:50m;
#     ssl_session_tickets off;
#
#     # Modern SSL configuration
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
#     ssl_prefer_server_ciphers on;
#
#     # HSTS
#     add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
#
#     # Security headers
#     add_header X-Frame-Options "SAMEORIGIN" always;
#     add_header X-Content-Type-Options "nosniff" always;
#     add_header X-XSS-Protection "1; mode=block" always;
#
#     # Use same location blocks as HTTP server above
#     location / {
#         proxy_pass http://sparql_agent_api;
#     }
# }

# Redirect HTTP to HTTPS (uncomment for production with SSL)
# server {
#     listen 80;
#     listen [::]:80;
#     server_name your-domain.com;
#
#     return 301 https://$server_name$request_uri;
# }
